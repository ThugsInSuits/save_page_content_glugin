(()=>{
/*!***************************!*\
  !*** ./src/ts/content.ts ***!
  \***************************/
let e,t=[],n="",o=!1;function i(e,t){const n=window.scrollY||document.documentElement.scrollTop;e.style.position="absolute",e.style.left=`${t.left+window.scrollX}px`,e.style.top=`${t.bottom+n}px`}chrome.storage.local.get("selectedText",(function(e){console.log(e),t=e.selectedText?JSON.parse(e.selectedText):[]})),document.addEventListener("mouseup",(function(l){const s=window.getSelection();if(s.rangeCount>0){const l=s.toString().trim();if(l&&n!==l){n=l;const c=s.getRangeAt(0).getBoundingClientRect();e||(e=function(){const e=document.createElement("div");return e.style.position="absolute",e.style.width="16px",e.style.height="16px",e.style.cursor="pointer",e.style.zIndex="10000",e.innerHTML="<img src='"+chrome.runtime.getURL("assests/globalGoogle16.png")+"' width='16px' height='16px'>",e.setAttribute("id","selectText"),e.style.display="none",e.addEventListener("click",(function(o){const i=window.getSelection().getRangeAt(0),l=document.createElement("mark");l.classList.add("highlighted-text");const s="highlight-"+Date.now();l.setAttribute("id",s),i.surroundContents(l);const c={id:s,text:n,rect:l.getBoundingClientRect(),url:window.location.href};t.push(c),chrome.storage.local.set({selectedText:JSON.stringify(t)},(function(){console.log("Selected text saved: "+JSON.stringify(c))})),window.getSelection().removeAllRanges(),e.style.display="none"})),e}(),document.body.appendChild(e)),i(e,c),e.style.display="block",o=!0,setTimeout((()=>{o=!1}),10)}}else e&&(e.style.display="none")})),window.addEventListener("scroll",(function(){if(e&&n){const t=window.getSelection();if(t.rangeCount>0){const n=t.getRangeAt(0).getBoundingClientRect();i(e,n)}}})),document.addEventListener("click",(function(t){e&&"selectText"!==t.target.id&&!o&&(e.style.display="none")})),chrome.runtime.onMessage.addListener((function(e,n,o){"clearHighlights"===e.action&&(document.querySelectorAll(".highlighted-text").forEach((e=>{const t=document.createTextNode(e.textContent);e.parentNode.replaceChild(t,e)})),t=[])})),chrome.runtime.onMessage.addListener((function(e,n,o){if("deleteHighlight"===e.action){const n=document.getElementById(e.highlightId);if(n){const e=document.createTextNode(n.textContent);n.parentNode.replaceChild(e,n)}t=t.filter((t=>t.id!==e.highlightId))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,